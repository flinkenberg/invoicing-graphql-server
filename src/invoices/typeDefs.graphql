enum InvoiceStatus {
  DRAFT
  DUE
  PAST_DUE
  PAID
  UNPAID
}

enum InvoiceDBKey {
  id
  customer
  total
  createdAt
  status
}

type LabelMin {
  name: String!
  color: String
}

type Item {
  name: String!
  description: String!
  price: Float!
  quantity: Int!
  discount: Int
}

type Invoice {
  id: ID!
  customer: CustomerMin!
  items: [Item]!
  labels: [LabelMin]
  currency: String!
  tax: Int!
  subtotal: Float!
  total: Float!
  createdAt: String!
  dueAt: String!
  status: InvoiceStatus!
}

type InvoicesPaginated {
  total: Int!
  items: [Invoice]!
}

input InvoiceInput {
  customerId: ID!
  items: [InvoiceItemInput]!
  currency: String!
  tax: Int!
  subtotal: Float!
  total: Float!
  dueAtTimestamp: String!
  status: InvoiceStatus!
}

input InvoiceItemInput {
  name: String!
  description: String!
  price: Float!
  quantity: Int!
}

extend type Query {
  getInvoices(
    limit: Int
    offset: Int
    search: String
    searchKey: InvoiceDBKey
    sortKey: InvoiceDBKey
    isDesc: Boolean
  ): InvoicesPaginated!
  getInvoice(id: ID!): Invoice!
}

extend type Mutation {
  createInvoice(input: InvoiceInput!): Invoice!
}
